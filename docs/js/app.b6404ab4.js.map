{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?2a33","webpack:///./src/lib/decision-tree.js","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue?bff9","webpack:///./src/components/Robot-Assistant.vue?ac85","webpack:///src/components/Robot-Assistant.vue","webpack:///./src/components/Robot-Assistant.vue?6d10","webpack:///./src/components/Robot-Assistant.vue","webpack:///./src/main.js","webpack:///./src/App.vue?f81e"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Appvue_type_template_id_03a95560_render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","id","src","element","img","_v","_s","χρώμα","βάρος","κοτσάνι","_e","saying","robotText","type","on","click","classify","trainingSet","_l","item","label","$event","addElementToTrainingSet","features","fetchNextInstance","resetState","domProps","innerHTML","tree","staticRenderFns","dt","DecisionTree","builder","root","buildDecisionTree","ignoredAttributes","arrayToHashSet","categoryAttr","minItemsCount","entropyThrehold","maxTreeDepth","RandomForest","treesNumber","trees","buildRandomForest","array","hashSet","attr","countUniqueValues","items","counter","entropy","Math","log","split","predicate","pivot","attrValue","match","notMatch","mostFrequentValue","mostFrequentCount","predict","predictRandomForest","predicates","==","a","b",">=","category","initialEntropy","alreadyChecked","bestSplit","gain","predicateName","attrPredPivot","currSplit","matchEntropy","notMatchEntropy","newEntropy","currGain","attribute","matchSubTree","notMatchSubTree","matchedCount","notMatchedCount","trainingSets","correspondingTree","forest","prediction","Appvue_type_script_lang_js_","components","allData","decisionTree","computed","methods","reload","instance","jquery_default","getJSON","currentElement","newElementIndex","indexOfCurrentElement","lodash_default","findIndex","unshift","objectSpread","train","config","decision_tree","treeToHtml","join","mounted","src_Appvue_type_script_lang_js_","component","componentNormalizer","options","__file","App","Robot_Assistantvue_type_template_id_194fec62_render","_m","Robot_Assistantvue_type_template_id_194fec62_staticRenderFns","Robot_Assistantvue_type_script_lang_js_","props","components_Robot_Assistantvue_type_script_lang_js_","Robot_Assistant_component","Robot_Assistant","Vue","use","BootstrapVue","RobotAssistant","render","h","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.b6404ab4.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mt-5\",attrs:{\"id\":\"main\"}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},[(_vm.element)?_c('div',{staticClass:\"selectionContainer box\"},[_c('div',{staticClass:\"row element-container\"},[_c('div',{staticClass:\"img-container\"},[_c('img',{attrs:{\"src\":_vm.element.img}})]),_c('div',{staticClass:\"element-info-container\"},[_c('div',{staticClass:\"element-info\"},[_c('p',[_vm._v(\"Χρώμα: \"),_c('b',[_vm._v(_vm._s(_vm.element.χρώμα))])]),_c('p',[_vm._v(\"Βάρος: \"),_c('b',[_vm._v(_vm._s(_vm.element.βάρος)+\" γρ.\")])]),_c('p',[_vm._v(\"Κοτσάνι: \"),_c('b',[_vm._v(_vm._s(_vm.element.κοτσάνι ? 'Ναι' : 'Όχι'))])])])])])]):_vm._e()]),_c('div',{staticClass:\"col-md-4\"},[_c('div',{staticClass:\"robot-container box\"},[_c('robot-assistant',{attrs:{\"saying\":_vm.robotText}}),_c('div',{staticClass:\"row mt-5\"},[_c('div',{staticClass:\"col-md-12 text-center\"},[_c('button',{staticClass:\"btn btn-lg btn-info robot-action\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.classify}},[_vm._v(\"\\n                            Δοκίμασέ με!\\n                        \")])])])],1)]),_c('div',{staticClass:\"col-md-4\"},[(_vm.trainingSet.length)?_c('div',{staticClass:\"training-set-container box\"},[_c('h4',[_vm._v(\"Τι έχω μάθει μέχρι τώρα:\")]),_vm._l((_vm.trainingSet),function(item){return _c('div',{key:item.id,staticClass:\"set-item row mt-3\"},[_c('div',{staticClass:\"col-sm-3\"},[_c('img',{staticClass:\"img-thumb\",attrs:{\"src\":item.img}})]),_c('div',{staticClass:\"col-sm-9\"},[_c('p',{staticClass:\"label\"},[_vm._v(\"Αυτό είναι ένα \"),_c('b',[_vm._v(_vm._s(item.label))])])])])})],2):_vm._e()])]),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},[(_vm.element)?_c('div',{staticClass:\"selectionContainer box \"},[_vm._v(\"\\n                Εκπαίδευσε το Θαλή! Τι αφορά η παραπάνω εικόνα;\\n                \"),_c('div',{staticClass:\"row element-container\"},[_c('div',{staticClass:\"col-lg-6\"},[_c('button',{staticClass:\"selectionBtn btn btn-lg btn-apple mt-3 mb-2\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.addElementToTrainingSet(_vm.features[0])}}},[_vm._v(_vm._s(_vm.features[0])+\"\\n                        \")])]),_c('div',{staticClass:\"col-lg-6\"},[_c('button',{staticClass:\"selectionBtn btn btn-lg btn-orange mt-3\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.addElementToTrainingSet(_vm.features[1])}}},[_vm._v(_vm._s(_vm.features[1])+\"\\n                        \")])]),_c('div',{staticClass:\"col-lg-12\"},[_c('hr'),_c('button',{staticClass:\"btn btn-lg btn-success\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.fetchNextInstance}},[_vm._v(\"Φέρε και άλλο φρούτο!\\n                        \")]),_c('br'),_c('br'),_c('button',{staticClass:\"btn btn-lg btn-info\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.resetState}},[_vm._v(\"Ξέχασε ό,τι ξέρεις...\\n                        \")])])])]):_vm._e()]),(_vm.tree)?_c('div',{staticClass:\"col-md-8\"},[_c('div',{staticClass:\"text-center tree-container box\"},[_c('div',{staticClass:\"selectionContainer\"},[_c('div',{staticClass:\"col-md-12\"},[_c('h2',[_vm._v(\"Πώς σκέφτομαι:\")]),_c('div',{staticClass:\"tree mt-3\",domProps:{\"innerHTML\":_vm._s(_vm.tree)}})])])])]):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* eslint-disable */\nvar dt = (function () {\n          \n    /**\n     * Creates an instance of DecisionTree\n     *\n     * @constructor\n     * @param builder - contains training set and\n     *                  some configuration parameters\n     */\n    function DecisionTree(builder) {        \n        this.root = buildDecisionTree({\n            trainingSet: builder.trainingSet,\n            ignoredAttributes: arrayToHashSet(builder.ignoredAttributes),\n            categoryAttr: builder.categoryAttr || 'category',\n            minItemsCount: builder.minItemsCount || 1,\n            entropyThrehold: builder.entropyThrehold || 0.01,\n            maxTreeDepth: builder.maxTreeDepth || 70\n        });\n    }\n          \n    DecisionTree.prototype.predict = function (item) {\n        return predict(this.root, item);\n    }\n\n    /**\n     * Creates an instance of RandomForest\n     * with specific number of trees\n     *\n     * @constructor\n     * @param builder - contains training set and some\n     *                  configuration parameters for\n     *                  building decision trees\n     */\n    function RandomForest(builder, treesNumber) {\n        this.trees = buildRandomForest(builder, treesNumber);\n    }\n          \n    RandomForest.prototype.predict = function (item) {\n        return predictRandomForest(this.trees, item);\n    }\n    \n    /**\n     * Transforming array to object with such attributes \n     * as elements of array (afterwards it can be used as HashSet)\n     */\n    function arrayToHashSet(array) {\n        var hashSet = {};\n        if (array) {\n            for(var i in array) {\n                var attr = array[i];\n                hashSet[attr] = true;\n            }\n        }\n        return hashSet;\n    }\n    \n    /**\n     * Calculating how many objects have the same \n     * values of specific attribute.\n     *\n     * @param items - array of objects\n     *\n     * @param attr  - variable with name of attribute, \n     *                which embedded in each object\n     */\n    function countUniqueValues(items, attr) {\n        var counter = {};\n\n        // detecting different values of attribute\n        for (var i = items.length - 1; i >= 0; i--) {\n            // items[i][attr] - value of attribute\n            counter[items[i][attr]] = 0;\n        }\n          \n        // counting number of occurrences of each of values\n        // of attribute\n        for (var i = items.length - 1; i >= 0; i--) {\n            counter[items[i][attr]] += 1;\n        }\n\n        return counter;\n    }\n    \n    /**\n     * Calculating entropy of array of objects \n     * by specific attribute.\n     *\n     * @param items - array of objects\n     *\n     * @param attr  - variable with name of attribute, \n     *                which embedded in each object\n     */\n    function entropy(items, attr) {\n        // counting number of occurrences of each of values\n        // of attribute\n        var counter = countUniqueValues(items, attr);\n\n        var entropy = 0;\n        var p;\n        for (var i in counter) {\n            p = counter[i] / items.length;\n            entropy += -p * Math.log(p);\n        }\n\n        return entropy;\n    }\n          \n    /**\n     * Splitting array of objects by value of specific attribute, \n     * using specific predicate and pivot.\n     *\n     * Items which matched by predicate will be copied to \n     * the new array called 'match', and the rest of the items \n     * will be copied to array with name 'notMatch'\n     *\n     * @param items - array of objects\n     *\n     * @param attr  - variable with name of attribute,\n     *                which embedded in each object\n     *\n     * @param predicate - function(x, y) \n     *                    which returns 'true' or 'false'\n     *\n     * @param pivot - used as the second argument when \n     *                calling predicate function:\n     *                e.g. predicate(item[attr], pivot)\n     */\n    function split(items, attr, predicate, pivot) {\n        var match = [];\n        var notMatch = [];\n\n        var item,\n            attrValue;\n          \n        for (var i = items.length - 1; i >= 0; i--) {\n            item = items[i];\n            attrValue = item[attr];\n\n            if (predicate(attrValue, pivot)) {\n                match.push(item);\n            } else {\n                notMatch.push(item);\n            }\n        }\n\n        return {\n            match: match,\n            notMatch: notMatch\n        };\n    }\n\n    /**\n     * Finding value of specific attribute which is most frequent\n     * in given array of objects.\n     *\n     * @param items - array of objects\n     *\n     * @param attr  - variable with name of attribute, \n     *                which embedded in each object\n     */\n    function mostFrequentValue(items, attr) {\n        // counting number of occurrences of each of values\n        // of attribute\n        var counter = countUniqueValues(items, attr);\n\n        var mostFrequentCount = 0;\n        var mostFrequentValue;\n\n        for (var value in counter) {\n            if (counter[value] > mostFrequentCount) {\n                mostFrequentCount = counter[value];\n                mostFrequentValue = value;\n            }\n        }\n\n        return mostFrequentValue;\n    }\n          \n    var predicates = {\n        '==': function (a, b) { return a == b },\n        '>=': function (a, b) { return a >= b }\n    };\n\n    /**\n     * Function for building decision tree\n     */\n    function buildDecisionTree(builder) {\n\n        var trainingSet = builder.trainingSet;\n        var minItemsCount = builder.minItemsCount;\n        var categoryAttr = builder.categoryAttr;\n        var entropyThrehold = builder.entropyThrehold;\n        var maxTreeDepth = builder.maxTreeDepth;\n        var ignoredAttributes = builder.ignoredAttributes;\n\n        if ((maxTreeDepth == 0) || (trainingSet.length <= minItemsCount)) {\n            // restriction by maximal depth of tree\n            // or size of training set is to small\n            // so we have to terminate process of building tree\n            return {\n                category: mostFrequentValue(trainingSet, categoryAttr)\n            };\n        }\n\n        var initialEntropy = entropy(trainingSet, categoryAttr);\n\n        if (initialEntropy <= entropyThrehold) {\n            // entropy of training set too small\n            // (it means that training set is almost homogeneous),\n            // so we have to terminate process of building tree\n            return {\n                category: mostFrequentValue(trainingSet, categoryAttr)\n            };\n        }\n\n        // used as hash-set for avoiding the checking of split by rules\n        // with the same 'attribute-predicate-pivot' more than once\n        var alreadyChecked = {};\n          \n        // this variable expected to contain rule, which splits training set\n        // into subsets with smaller values of entropy (produces informational gain)\n        var bestSplit = {gain: 0};\n\n        for (var i = trainingSet.length - 1; i >= 0; i--) {\n            var item = trainingSet[i];\n\n            // iterating over all attributes of item\n            for (var attr in item) {\n                if ((attr == categoryAttr) || ignoredAttributes[attr]) {\n                    continue;\n                }\n\n                // let the value of current attribute be the pivot\n                var pivot = item[attr];\n\n                // pick the predicate\n                // depending on the type of the attribute value\n                var predicateName;\n                if (typeof pivot == 'number') {\n                    predicateName = '>=';\n                } else {\n                    // there is no sense to compare non-numeric attributes\n                    // so we will check only equality of such attributes\n                    predicateName = '==';\n                }\n\n                var attrPredPivot = attr + predicateName + pivot;\n                if (alreadyChecked[attrPredPivot]) {\n                    // skip such pairs of 'attribute-predicate-pivot',\n                    // which been already checked\n                    continue;\n                }\n                alreadyChecked[attrPredPivot] = true;\n\n                var predicate = predicates[predicateName];\n          \n                // splitting training set by given 'attribute-predicate-value'\n                var currSplit = split(trainingSet, attr, predicate, pivot);\n\n                // calculating entropy of subsets\n                var matchEntropy = entropy(currSplit.match, categoryAttr);\n                var notMatchEntropy = entropy(currSplit.notMatch, categoryAttr);\n\n                // calculating informational gain\n                var newEntropy = 0;\n                newEntropy += matchEntropy * currSplit.match.length;\n                newEntropy += notMatchEntropy * currSplit.notMatch.length;\n                newEntropy /= trainingSet.length;\n                var currGain = initialEntropy - newEntropy;\n\n                if (currGain > bestSplit.gain) {\n                    // remember pairs 'attribute-predicate-value'\n                    // which provides informational gain\n                    bestSplit = currSplit;\n                    bestSplit.predicateName = predicateName;\n                    bestSplit.predicate = predicate;\n                    bestSplit.attribute = attr;\n                    bestSplit.pivot = pivot;\n                    bestSplit.gain = currGain;\n                }\n            }\n        }\n\n        if (!bestSplit.gain) {\n            // can't find optimal split\n            return { category: mostFrequentValue(trainingSet, categoryAttr) };\n        }\n\n        // building subtrees\n          \n        builder.maxTreeDepth = maxTreeDepth - 1;\n\n        builder.trainingSet = bestSplit.match;\n        var matchSubTree = buildDecisionTree(builder);\n\n        builder.trainingSet = bestSplit.notMatch;\n        var notMatchSubTree = buildDecisionTree(builder);\n\n        return {\n            attribute: bestSplit.attribute,\n            predicate: bestSplit.predicate,\n            predicateName: bestSplit.predicateName,\n            pivot: bestSplit.pivot,\n            match: matchSubTree,\n            notMatch: notMatchSubTree,\n            matchedCount: bestSplit.match.length,\n            notMatchedCount: bestSplit.notMatch.length\n        };\n    }\n\n    /**\n     * Classifying item, using decision tree\n     */\n    function predict(tree, item) {\n        var attr,\n            value,\n            predicate,\n            pivot;\n        \n        // Traversing tree from the root to leaf\n        while(true) {\n          \n            if (tree.category) {\n                // only leafs contains predicted category\n                return tree.category;\n            }\n\n            attr = tree.attribute;\n            value = item[attr];\n\n            predicate = tree.predicate;\n            pivot = tree.pivot;\n\n            // move to one of subtrees\n            if (predicate(value, pivot)) {\n                tree = tree.match;\n            } else {\n                tree = tree.notMatch;\n            }\n        }\n    }\n\n    /**\n     * Building array of decision trees\n     */\n    function buildRandomForest(builder, treesNumber) {\n        var items = builder.trainingSet;\n          \n        // creating training sets for each tree\n        var trainingSets = [];\n        for (var t = 0; t < treesNumber; t++) {\n            trainingSets[t] = [];\n        }\n        for (var i = items.length - 1; i >= 0 ; i--) {\n          // assigning items to training sets of each tree\n          // using 'round-robin' strategy\n          var correspondingTree = i % treesNumber;\n          trainingSets[correspondingTree].push(items[i]);\n        }\n\n        // building decision trees\n        var forest = [];\n        for (var t = 0; t < treesNumber; t++) {\n            builder.trainingSet = trainingSets[t];\n\n            var tree = new DecisionTree(builder);\n            forest.push(tree);\n        }\n        return forest;\n    }\n\n    /**\n     * Each of decision tree classifying item\n     * ('voting' that item corresponds to some class).\n     *\n     * This function returns hash, which contains \n     * all classifying results, and number of votes \n     * which were given for each of classifying results\n     */\n    function predictRandomForest(forest, item) {\n        var result = {};\n        for (var i in forest) {\n            var tree = forest[i];\n            var prediction = tree.predict(item);\n            result[prediction] = result[prediction] ? result[prediction] + 1 : 1;\n        }\n        return result;\n    }\n\n    var exports = {};\n    exports.DecisionTree = DecisionTree;\n    exports.RandomForest = RandomForest;\n    return exports;\n})();\n\nexport default dt;\n/* eslint-enable */","<template>\n    <div class=\"mt-5\" id=\"main\">\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <div class=\"selectionContainer box\" v-if=\"element\">\n                    <div class=\"row element-container\">\n                        <div class=\"img-container\">\n                            <img :src=\"element.img\">\n                        </div>\n                        <div class=\"element-info-container\">\n                            <div class=\"element-info\">\n                                <p>Χρώμα: <b>{{ element.χρώμα }}</b></p>\n                                <p>Βάρος: <b>{{ element.βάρος }} γρ.</b></p>\n                                <p>Κοτσάνι: <b>{{ element.κοτσάνι ? 'Ναι' : 'Όχι' }}</b></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"robot-container box\">\n                    <robot-assistant v-bind:saying=\"robotText\"></robot-assistant>\n                    <div class=\"row mt-5\">\n                        <div class=\"col-md-12 text-center\">\n                            <button v-on:click=\"classify\" type=\"button\" class=\"btn btn-lg btn-info robot-action\">\n                                Δοκίμασέ με!\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"training-set-container box\" v-if=\"trainingSet.length\">\n                    <h4>Τι έχω μάθει μέχρι τώρα:</h4>\n                    <div class=\"set-item row mt-3\" v-for=\"item in trainingSet\" :key=\"item.id\">\n                        <div class=\"col-sm-3\">\n                            <img class=\"img-thumb\" :src=\"item.img\">\n                        </div>\n                        <div class=\"col-sm-9\">\n                            <p class=\"label\">Αυτό είναι ένα <b>{{ item.label }}</b></p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <div class=\"selectionContainer box \" v-if=\"element\">\n                    Εκπαίδευσε το Θαλή! Τι αφορά η παραπάνω εικόνα;\n                    <div class=\"row element-container\">\n                        <div class=\"col-lg-6\">\n                            <button v-on:click=\"addElementToTrainingSet(features[0])\" type=\"button\"\n                                    class=\"selectionBtn btn btn-lg btn-apple mt-3 mb-2\">{{ features[0] }}\n                            </button>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <button v-on:click=\"addElementToTrainingSet(features[1])\" type=\"button\"\n                                    class=\"selectionBtn btn btn-lg btn-orange mt-3\">{{ features[1] }}\n                            </button>\n                        </div>\n                        <div class=\"col-lg-12\">\n                            <hr>\n                            <button v-on:click=\"fetchNextInstance\" type=\"button\"\n                                    class=\"btn btn-lg btn-success\">Φέρε και άλλο φρούτο!\n                            </button>\n                            <br><br>\n                            <button v-on:click=\"resetState\" type=\"button\" class=\"btn btn-lg btn-info\">Ξέχασε ό,τι ξέρεις...\n                            </button>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            <div class=\"col-md-8\" v-if=\"tree\">\n                <div class=\"text-center tree-container box\">\n                    <div class=\"selectionContainer\">\n                        <div class=\"col-md-12\">\n                            <h2>Πώς σκέφτομαι:</h2>\n                            <div class=\"tree mt-3\" v-html=\"tree\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import dt from './lib/decision-tree';\n    import $ from 'jquery';\n    import _ from 'lodash';\n\n    export default {\n        components: {},\n        data() {\n            return {\n                allData: [],\n                trainingSet: [],\n                element: null,\n                prediction: null,\n                features: [],\n                robotText: null,\n                tree: null,\n                decisionTree: null\n            }\n        },\n        computed: {},\n        methods: {\n            reload() {\n                this.trainingSet = [];\n                this.decisionTree = null;\n                this.element = null;\n                let instance = this;\n                $.getJSON(\"set.json\", function (object) {\n                    instance.allData = object.data;\n                    instance.features = object.features;\n                    instance.fetchNextInstance();\n                });\n            },\n            fetchNextInstance() {\n\n                if (this.allData.length > 0) {\n                    let currentElement = this.element;\n                    let newElementIndex =0;\n                    if (currentElement !== null){\n                        let indexOfCurrentElement = _.findIndex(this.allData, function (o) {\n                            return o.id === currentElement.id\n                        });\n                        if (indexOfCurrentElement < this.allData.length - 1)\n                            newElementIndex = indexOfCurrentElement + 1;\n                    }\n                    this.element = this.allData[newElementIndex];\n                }\n                if (this.trainingSet.length > 0)\n                    this.robotText = \"Ωχ...Ένα φρούτο! Νομίζω ξέρω τί ειναι!\"\n\n            },\n            addElementToTrainingSet(label) {\n                this.trainingSet.unshift({\n                    ...this.element,\n                    label: label\n                });\n                this.train();\n            },\n            resetState() {\n                this.reload();\n                this.prediction = null;\n                this.robotText = 'Γεία! Είμαι ο Θαλής! Εκπαίδευσέ με για να γίνω σοφότερος!';\n                this.tree = null;\n            },\n            train() {\n                if (!this.trainingSet.length)\n                    this.robotText = 'Δεν έχω αρκετά δεδομένα για να μάθω...';\n\n                else {\n                    let config = {\n                        trainingSet: this.trainingSet,\n                        categoryAttr: 'label',\n                        ignoredAttributes: ['img', 'id']\n                    };\n                    // Building Decision Tree\n                    this.decisionTree = new dt.DecisionTree(config);\n                    this.tree = this.treeToHtml(this.decisionTree.root);\n                    this.robotText = 'Γιαμ γιαμ! Νόστιμα τα δεδομένα!'\n                }\n            },\n            classify() {\n                if (!this.decisionTree)\n                    this.robotText = 'Δεν έχω αρκετά δεδομένα για να κάνω πρόβλεψη.';\n                else {\n                    this.prediction = this.decisionTree.predict(this.element);\n\n                    this.robotText = this.prediction ? 'Χμ... μήπως είναι ένα <b>' + this.prediction + '</b>?' : 'Πραγματικά δεν ξέρω τι είναι αυτό...'\n                }\n            },\n            treeToHtml(tree) {\n                // only leafs containing category\n                if (tree.category) {\n                    return ['<ul>',\n                        '<li>',\n                        '<a href=\"#\">',\n                        '<b>', tree.category, '</b>',\n                        '</a>',\n                        '</li>',\n                        '</ul>'].join('');\n                }\n\n                return ['<ul>',\n                    '<li>',\n                    '<a href=\"#\">',\n                    '<b>', tree.attribute, ' ', tree.predicateName, ' ', tree.pivot, ' ?</b>',\n                    '</a>',\n                    '<ul>',\n                    '<li>',\n                    '<a href=\"#\">Ναι</a>',\n                    this.treeToHtml(tree.match),\n                    '</li>',\n                    '<li>',\n                    '<a href=\"#\">Οχι</a>',\n                    this.treeToHtml(tree.notMatch),\n                    '</li>',\n                    '</ul>',\n                    '</li>',\n                    '</ul>'].join('');\n            }\n        },\n        mounted() {\n            this.resetState();\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    @import '~bootstrap/scss/bootstrap';\n    @import '~bootstrap-vue/dist/bootstrap-vue.css';\n\n    #main {\n        margin: 0 5%;\n    }\n\n    .speech-bubble {\n        position: relative;\n        background: #673AB7;\n        border-radius: .4em;\n        padding: 10px;\n        color: #FFFFFF;\n        font-size: 18px;\n        @include media-breakpoint-down(md) {\n            padding: 5px;\n            font-size: 12px;\n        }\n    }\n\n    .btn-apple {\n        color: #FFFFFF;\n        background-color: #f44336;\n    }\n\n    .btn-orange {\n        color: #FFFFFF;\n        background-color: #FF9800;\n    }\n\n    .speech-bubble:after {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 30%;\n        width: 0;\n        height: 0;\n        border: 20px solid transparent;\n        border-top-color: #673AB7;\n        border-bottom: 0;\n        border-left: 0;\n        margin-left: -10px;\n        margin-bottom: -20px;\n    }\n\n    .training-set-container {\n        height: 350px;\n        overflow: hidden;\n        overflow-y: scroll;\n    }\n\n    .set-item {\n        .img-thumb {\n            max-width: 100%;\n            border-radius: 10px;\n        }\n\n        .label {\n            position: absolute;\n            top: 50%;\n            transform: translateY(-50%);\n            line-height: 1.1em;\n            font-size: x-large;\n            @include media-breakpoint-down(md) {\n                font-size: medium;\n            }\n        }\n    }\n\n    .tree-container.box {\n        min-height: 350px;\n        height: auto;\n    }\n\n    .robot-container {\n        height: 350px;\n    }\n\n    .robot-action {\n        width: 150px;\n    }\n\n    .robot {\n        img {\n            width: 100%;\n            max-height: 200px;\n            @include media-breakpoint-down(md) {\n                font-size: medium;\n            }\n\n        }\n    }\n\n    .selectionBtn {\n        max-width: 180px;\n        width: 100%;\n        height: 100px;\n        font-size: 25px;\n\n    }\n\n    .tree * {\n        margin: 0;\n        padding: 0;\n    }\n\n    .box {\n        padding: 20px;\n        border-radius: 10px;\n        border: 3px solid #3F51B5;\n        height: 350px;\n        margin-bottom: 20px;\n    }\n\n    .selectionContainer {\n        text-align: center;\n\n        .element-container {\n\n            .img-container {\n                width: 80%;\n                margin: auto;\n                text-align: center;\n                img {\n                    max-height: 200px;\n                    width: auto;\n                    max-width: 100%;\n                    margin: auto;\n                    border-radius: 10px;\n                }\n            }\n\n            .element-info-container {\n                margin: 0 auto;\n                padding: 20px;\n            }\n\n            .element-info {\n                text-align: left;\n                p {\n                    margin-bottom: 0;\n                }\n            ;\n            }\n\n        }\n    }\n\n    .tree {\n        display: inline-block;\n    }\n\n    .tree ul {\n        padding-top: 20px;\n        position: relative;\n\n        transition: all 0.5s;\n        -webkit-transition: all 0.5s;\n        -moz-transition: all 0.5s;\n    }\n\n    .tree li {\n        white-space: nowrap;\n        float: left;\n        text-align: center;\n        list-style-type: none;\n        position: relative;\n        padding: 20px 5px 0 5px;\n\n        transition: all 0.5s;\n        -webkit-transition: all 0.5s;\n        -moz-transition: all 0.5s;\n    }\n\n    /*We will use ::before and ::after to draw the connectors*/\n\n    .tree li::before, .tree li::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        right: 50%;\n        border-top: 1px solid #3F51B5;\n        width: 50%;\n        height: 20px;\n    }\n\n    .tree li::after {\n        right: auto;\n        left: 50%;\n        border-left: 1px solid #3F51B5;\n    }\n\n    /*We need to remove left-right connectors from elements without\n     any siblings*/\n    .tree li:only-child::after, .tree li:only-child::before {\n        display: none;\n    }\n\n    /*Remove space from the top of single children*/\n    .tree li:only-child {\n        padding-top: 0;\n    }\n\n    /*Remove left connector from first child and\n     right connector from last child*/\n    .tree li:first-child::before, .tree li:last-child::after {\n        border: 0 none;\n    }\n\n    /*Adding back the vertical connector to the last nodes*/\n    .tree li:last-child::before {\n        border-right: 1px solid #3F51B5;\n        border-radius: 0 5px 0 0;\n        -webkit-border-radius: 0 5px 0 0;\n        -moz-border-radius: 0 5px 0 0;\n    }\n\n    .tree li:first-child::after {\n        border-radius: 5px 0 0 0;\n        -webkit-border-radius: 5px 0 0 0;\n        -moz-border-radius: 5px 0 0 0;\n    }\n\n    /*Time to add downward connectors from parents*/\n    .tree ul ul::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 50%;\n        border-left: 1px solid #3F51B5;\n        width: 0;\n        height: 20px;\n    }\n\n    .tree li a {\n        border: 1px solid #9C27B0;\n        padding: 5px 10px;\n        text-decoration: none;\n        color: #2196F3;\n        display: inline-block;\n\n        border-radius: 5px;\n        -webkit-border-radius: 5px;\n        -moz-border-radius: 5px;\n\n        transition: all 0.5s;\n        -webkit-transition: all 0.5s;\n        -moz-transition: all 0.5s;\n    }\n\n    /*Time for some hover effects*/\n    /*We will apply the hover effect the the lineage of the element also*/\n    .tree li a:hover, .tree li a:hover + ul li a {\n        background: #c8e4f8;\n        color: #000;\n        border: 1px solid #94a0b4;\n    }\n\n    /*Connector styles on hover*/\n    .tree li a:hover + ul li::after,\n    .tree li a:hover + ul li::before,\n    .tree li a:hover + ul::before,\n    .tree li a:hover + ul ul::before {\n        border-color: #94a0b4;\n    }\n\n    @include media-breakpoint-down(md) {\n        .btn {\n            height: auto;\n            font-size: medium;\n        }\n    }\n\n\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=03a95560&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"App.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_vm._m(0),_c('div',{staticClass:\"col\"},[_c('p',{staticClass:\"robot-saying speech-bubble\",domProps:{\"innerHTML\":_vm._s(_vm.saying)}})])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col\"},[_c('div',{staticClass:\"robot\"},[_c('img',{attrs:{\"src\":\"robot.png\"}})])])}]\n\nexport { render, staticRenderFns }","<template>\n<div class=\"row\">\n    <div class=\"col\">\n        <div class=\"robot\">\n            <img src=\"robot.png\">\n        </div>\n    </div>\n    <div class=\"col\">\n        <p class=\"robot-saying speech-bubble\" v-html=\"saying\"></p>\n    </div>\n</div>\n</template>\n<script>\n    export default {\n        props: [\n            'saying'\n        ],\n        components: {\n        },\n        data() {\n            return {}\n        },\n        computed: {},\n        methods: {},\n        mounted() {\n        }\n    }\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Robot-Assistant.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Robot-Assistant.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Robot-Assistant.vue?vue&type=template&id=194fec62&\"\nimport script from \"./Robot-Assistant.vue?vue&type=script&lang=js&\"\nexport * from \"./Robot-Assistant.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Robot-Assistant.vue\"\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\nimport BootstrapVue from 'bootstrap-vue'\nimport RobotAssistant from './components/Robot-Assistant.vue';\n\nVue.use(BootstrapVue);\nVue.component('robot-assistant', RobotAssistant);\n\nnew Vue({\n  render: h => h(App)\n}).$mount(\"#app\");\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\""],"sourceRoot":""}